// Auto-generated Supabase types
// This file will be generated by: npx supabase gen types typescript --project-id [your-project-id]

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      organizations: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          name: string
          slug: string
          description: string | null
          logo_url: string | null
          settings: Json
          owner_id: string
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          name: string
          slug: string
          description?: string | null
          logo_url?: string | null
          settings?: Json
          owner_id: string
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          name?: string
          slug?: string
          description?: string | null
          logo_url?: string | null
          settings?: Json
          owner_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "organizations_owner_id_fkey"
            columns: ["owner_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      profiles: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          email: string
          name: string | null
          avatar_url: string | null
          role: string
          organization_id: string | null
          last_login_at: string | null
          preferences: Json
        }
        Insert: {
          id: string
          created_at?: string
          updated_at?: string
          email: string
          name?: string | null
          avatar_url?: string | null
          role?: string
          organization_id?: string | null
          last_login_at?: string | null
          preferences?: Json
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          email?: string
          name?: string | null
          avatar_url?: string | null
          role?: string
          organization_id?: string | null
          last_login_at?: string | null
          preferences?: Json
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "profiles_organization_id_fkey"
            columns: ["organization_id"]
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          }
        ]
      }
      projects: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          name: string
          description: string | null
          organization_id: string
          owner_id: string
          status: string
          priority: string
          workflow_types: string[]
          metadata: Json
          team_members: string[]
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          name: string
          description?: string | null
          organization_id: string
          owner_id: string
          status?: string
          priority?: string
          workflow_types?: string[]
          metadata?: Json
          team_members?: string[]
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          name?: string
          description?: string | null
          organization_id?: string
          owner_id?: string
          status?: string
          priority?: string
          workflow_types?: string[]
          metadata?: Json
          team_members?: string[]
        }
        Relationships: [
          {
            foreignKeyName: "projects_organization_id_fkey"
            columns: ["organization_id"]
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "projects_owner_id_fkey"
            columns: ["owner_id"]
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      chat_sessions: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          project_id: string
          user_id: string
          title: string
          context_type: string
          ai_provider: string
          model_name: string
          system_prompt: string | null
          total_tokens_used: number
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id: string
          user_id: string
          title: string
          context_type: string
          ai_provider: string
          model_name: string
          system_prompt?: string | null
          total_tokens_used?: number
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id?: string
          user_id?: string
          title?: string
          context_type?: string
          ai_provider?: string
          model_name?: string
          system_prompt?: string | null
          total_tokens_used?: number
        }
        Relationships: [
          {
            foreignKeyName: "chat_sessions_project_id_fkey"
            columns: ["project_id"]
            referencedRelation: "projects"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "chat_sessions_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      chat_messages: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          session_id: string
          role: string
          content: string
          tokens_used: number | null
          metadata: Json | null
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          session_id: string
          role: string
          content: string
          tokens_used?: number | null
          metadata?: Json | null
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          session_id?: string
          role?: string
          content?: string
          tokens_used?: number | null
          metadata?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "chat_messages_session_id_fkey"
            columns: ["session_id"]
            referencedRelation: "chat_sessions"
            referencedColumns: ["id"]
          }
        ]
      }
      generated_images: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          project_id: string
          user_id: string
          prompt: string
          negative_prompt: string | null
          model: string
          provider: string
          image_url: string
          thumbnail_url: string | null
          width: number
          height: number
          file_size: number
          generation_time_ms: number
          parameters: Json
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id: string
          user_id: string
          prompt: string
          negative_prompt?: string | null
          model: string
          provider: string
          image_url: string
          thumbnail_url?: string | null
          width: number
          height: number
          file_size: number
          generation_time_ms: number
          parameters: Json
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id?: string
          user_id?: string
          prompt?: string
          negative_prompt?: string | null
          model?: string
          provider?: string
          image_url?: string
          thumbnail_url?: string | null
          width?: number
          height?: number
          file_size?: number
          generation_time_ms?: number
          parameters?: Json
        }
        Relationships: [
          {
            foreignKeyName: "generated_images_project_id_fkey"
            columns: ["project_id"]
            referencedRelation: "projects"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "generated_images_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      user_role: 'admin' | 'sub_admin' | 'member_1' | 'member_2' | 'member_3' | 'member_4' | 'member_5'
      project_status: 'draft' | 'in_progress' | 'completed' | 'archived'
      workflow_type: 'proposal' | 'construction' | 'operational'
      ai_provider: 'openai' | 'anthropic' | 'google'
      project_priority: 'low' | 'medium' | 'high' | 'urgent'
      context_type: 'planning' | 'design' | 'publishing' | 'development' | 'general'
      message_role: 'user' | 'assistant' | 'system'
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}