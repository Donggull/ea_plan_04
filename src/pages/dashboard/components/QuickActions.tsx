import { useNavigate } from 'react-router-dom'\nimport { Plus, ImageIcon, MessageCircle, FileText, Palette, Settings } from 'lucide-react'\nimport { useUIStore } from '@/stores/uiStore'\n\ninterface QuickAction {\n  id: string\n  title: string\n  description: string\n  icon: React.ReactNode\n  color: 'blue' | 'green' | 'orange' | 'plan' | 'build' | 'security'\n  href?: string\n  onClick?: () => void\n}\n\nexport function QuickActions() {\n  const navigate = useNavigate()\n  const { openModal } = useUIStore()\n\n  const quickActions: QuickAction[] = [\n    {\n      id: 'new-project',\n      title: '새 프로젝트',\n      description: '새로운 프로젝트를 시작하세요',\n      icon: <Plus className=\"w-5 h-5\" />,\n      color: 'blue',\n      onClick: () => {\n        // TODO: 새 프로젝트 모달 열기\n        openModal({\n          component: () => <div>새 프로젝트 모달</div>,\n          size: 'lg'\n        })\n      }\n    },\n    {\n      id: 'generate-image',\n      title: '이미지 생성',\n      description: 'AI로 이미지를 생성하세요',\n      icon: <ImageIcon className=\"w-5 h-5\" />,\n      color: 'orange',\n      href: '/image-generation'\n    },\n    {\n      id: 'ai-chat',\n      title: 'AI 채팅',\n      description: '전용 챗봇과 대화하세요',\n      icon: <MessageCircle className=\"w-5 h-5\" />,\n      color: 'plan',\n      href: '/chatbot/ai-chat'\n    },\n    {\n      id: 'planning',\n      title: '기획 작업',\n      description: '프로젝트 기획을 시작하세요',\n      icon: <FileText className=\"w-5 h-5\" />,\n      color: 'build',\n      href: '/planning/proposal'\n    },\n    {\n      id: 'design',\n      title: '디자인 작업',\n      description: '디자인 워크플로우를 관리하세요',\n      icon: <Palette className=\"w-5 h-5\" />,\n      color: 'security',\n      href: '/design/workflow'\n    },\n    {\n      id: 'settings',\n      title: '설정',\n      description: '시스템 설정을 변경하세요',\n      icon: <Settings className=\"w-5 h-5\" />,\n      color: 'blue',\n      onClick: () => {\n        // TODO: 설정 모달 또는 페이지로 이동\n        openModal({\n          component: () => <div>설정 모달</div>,\n          size: 'lg'\n        })\n      }\n    }\n  ]\n\n  const handleActionClick = (action: QuickAction) => {\n    if (action.onClick) {\n      action.onClick()\n    } else if (action.href) {\n      navigate(action.href)\n    }\n  }\n\n  const getColorClasses = (color: QuickAction['color']) => {\n    const colorMap = {\n      blue: {\n        bg: 'linear-bg-blue-soft hover:linear-bg-blue-soft',\n        icon: 'linear-accent-blue',\n        border: 'hover:border-accent-blue/20'\n      },\n      green: {\n        bg: 'linear-bg-green-soft hover:linear-bg-green-soft',\n        icon: 'linear-accent-green',\n        border: 'hover:border-accent-green/20'\n      },\n      orange: {\n        bg: 'linear-bg-orange-soft hover:linear-bg-orange-soft',\n        icon: 'linear-accent-orange',\n        border: 'hover:border-accent-orange/20'\n      },\n      plan: {\n        bg: 'linear-bg-plan-soft hover:linear-bg-plan-soft',\n        icon: 'linear-accent-plan',\n        border: 'hover:border-accent-plan/20'\n      },\n      build: {\n        bg: 'linear-bg-build-soft hover:linear-bg-build-soft',\n        icon: 'linear-accent-build',\n        border: 'hover:border-accent-build/20'\n      },\n      security: {\n        bg: 'linear-bg-security-soft hover:linear-bg-security-soft',\n        icon: 'linear-accent-security',\n        border: 'hover:border-accent-security/20'\n      }\n    }\n    return colorMap[color]\n  }\n\n  return (\n    <div className=\"linear-card\">\n      <h3 className=\"linear-title-2 mb-4\">빠른 작업</h3>\n      \n      <div className=\"space-y-3\">\n        {quickActions.map((action) => {\n          const colorClasses = getColorClasses(action.color)\n          \n          return (\n            <button\n              key={action.id}\n              onClick={() => handleActionClick(action)}\n              className={`w-full p-4 rounded-linear-md border border-border-primary ${\n                colorClasses.bg\n              } ${colorClasses.border} transition-all duration-linear-fast hover:transform hover:scale-[1.02] linear-animate-fade-in`}\n            >\n              <div className=\"linear-flex-start linear-gap-sm text-left\">\n                <div className={`flex-shrink-0 ${colorClasses.icon}`}>\n                  {action.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"linear-text-regular font-medium linear-text-primary mb-1\">\n                    {action.title}\n                  </h4>\n                  <p className=\"linear-text-small linear-text-tertiary\">\n                    {action.description}\n                  </p>\n                </div>\n              </div>\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}